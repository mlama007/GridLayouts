$layouts: (6 6)
          (3 3 3 3)
          (4 4 4)
          (4 4 2 2)
          (2 2 4 4)
          (4 2 2 4)
          (2 4 4 2)
          (3 9)
          (9 3)
          (4 8)
          (5 7)
          (7 5)
          (8 4)
          (2 8 2)
          (2 2 8)
          (8 2 2)
          (2 4 3 3)
          (4 2 3 3)         
          (3 7 2)         
          (3 2 7)         
          (2 3 7)         
          (2 7 3)         
          (7 2 3)         
          (7 3 2)         
          (2 4 6)
          (2 6 4)
          (6 2 4)
          (6 4 2)
          (4 2 6)
          (4 6 2);

$colors: red blue green yellow pink purple;

@each $color in $colors {
    .#{$color} {
      background: $color;
      height: 50px;
    }
}



// ----------Breakpoint----------

$screen-xs-min:	480px;
$screen-sm-min:	768px;
$screen-md-min:	992px;
$screen-lg-min:	1200px;

$screen-xxs-max:	479px;
$screen-xs-max:	767px;
$screen-sm-max:	991px;
$screen-md-max:	1199px;

@media only screen and (max-width: $screen-xxs-max)  {  
  *{
    background-color: black;
  }
    
  @each $layout in $layouts {
      [custom-layout="#{$layout}"] {
        display: grid;
        grid-template-columns: 1fr;
        border: 2px solid black;
        margin-bottom: .5em; 
      }
  }
}
@media only screen and (max-width: $screen-xs-max) and (min-width: $screen-xs-min)  {  
  *{
    background-color: rgb(1, 255, 208);
  }    
  @function getCustomLayoutValues($values...) {
    $templateColumns: "";
    @each $set in $values {
      $length: length($set);
      @if $length % 3 == 0 {
        $templateColumns: 1fr;
      }
      @else if $length == 4 {
        $templateColumns: 1fr 1fr;
      }
      @else {
        $templateColumns: add_fr($set);
      }
    } 
    @return  $templateColumns;  
  }

  @function add_fr($set) {
    $columns: "";
    @each $value in $set {
      $columns: #{$columns} $value + fr;
    }
    @return $columns;
  }

  @each $layout in $layouts {
      [custom-layout="#{$layout}"] {
        display: grid;
        grid-template-columns: getCustomLayoutValues($layout);
        border: 2px solid black;
        margin-bottom: .5em; 
      }
  }
}
// @media only screen and (max-width: $screen-sm-max) and (min-width: $screen-sm-min)  {  
//   *{
//     background-color: blue;
//   }
// }
// @media only screen and (max-width: $screen-md-max) and (min-width: $screen-md-min)  {  
//   *{
//     background-color: purple;
//   }
// }
@media only screen and (min-width: $screen-xs-max)  {
  *{
    background-color: yellow;
  }
  @function getCustomLayoutValues($values...) {
    $templateColumns: "";
    @each $set in $values {
      $templateColumns: add_fr($set);
    } 
    @return  $templateColumns;  
  }
  
  @function add_fr($set) {
    $columns: "";
    @each $value in $set {
      $columns: #{$columns} $value + fr;
    }
    @return $columns;
  }
    
  @each $layout in $layouts {
      [custom-layout="#{$layout}"] {
        display: grid;
        grid-template-columns: getCustomLayoutValues($layout);
        border: 2px solid black;
        margin-bottom: .5em; 
      }
  }
}